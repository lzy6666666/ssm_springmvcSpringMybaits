<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tzhu.ssm.dao.SmbmsAddressMapper" >
  <resultMap id="BaseResultMap" type="com.tzhu.ssm.domain.SmbmsAddress" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="addressDesc" property="addressdesc" jdbcType="VARCHAR" />
    <result column="postCode" property="postcode" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="createdBy" property="createdby" jdbcType="INTEGER" />
    <result column="creationDate" property="creationdate" jdbcType="TIMESTAMP" />
    <result column="modifyBy" property="modifyby" jdbcType="INTEGER" />
    <result column="modifyDate" property="modifydate" jdbcType="TIMESTAMP" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, contact, addressDesc, postCode, tel, createdBy, creationDate, modifyBy, modifyDate, 
    userId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tzhu.ssm.domain.SmbmsAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from smbms_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from smbms_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from smbms_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tzhu.ssm.domain.SmbmsAddress" >
    insert into smbms_address (id, contact, addressDesc, 
      postCode, tel, createdBy, 
      creationDate, modifyBy, modifyDate, 
      userId)
    values (#{id,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, #{addressdesc,jdbcType=VARCHAR}, 
      #{postcode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{createdby,jdbcType=INTEGER}, 
      #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=INTEGER}, #{modifydate,jdbcType=TIMESTAMP}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tzhu.ssm.domain.SmbmsAddress" >
    insert into smbms_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="addressdesc != null" >
        addressDesc,
      </if>
      <if test="postcode != null" >
        postCode,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="creationdate != null" >
        creationDate,
      </if>
      <if test="modifyby != null" >
        modifyBy,
      </if>
      <if test="modifydate != null" >
        modifyDate,
      </if>
      <if test="userid != null" >
        userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="addressdesc != null" >
        #{addressdesc,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="creationdate != null" >
        #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyby != null" >
        #{modifyby,jdbcType=INTEGER},
      </if>
      <if test="modifydate != null" >
        #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update smbms_address
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.addressdesc != null" >
        addressDesc = #{record.addressdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null" >
        postCode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.createdby != null" >
        createdBy = #{record.createdby,jdbcType=INTEGER},
      </if>
      <if test="record.creationdate != null" >
        creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyby != null" >
        modifyBy = #{record.modifyby,jdbcType=INTEGER},
      </if>
      <if test="record.modifydate != null" >
        modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update smbms_address
    set id = #{record.id,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      addressDesc = #{record.addressdesc,jdbcType=VARCHAR},
      postCode = #{record.postcode,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      createdBy = #{record.createdby,jdbcType=INTEGER},
      creationDate = #{record.creationdate,jdbcType=TIMESTAMP},
      modifyBy = #{record.modifyby,jdbcType=INTEGER},
      modifyDate = #{record.modifydate,jdbcType=TIMESTAMP},
      userId = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tzhu.ssm.domain.SmbmsAddress" >
    update smbms_address
    <set >
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="addressdesc != null" >
        addressDesc = #{addressdesc,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postCode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="creationdate != null" >
        creationDate = #{creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyby != null" >
        modifyBy = #{modifyby,jdbcType=INTEGER},
      </if>
      <if test="modifydate != null" >
        modifyDate = #{modifydate,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tzhu.ssm.domain.SmbmsAddress" >
    update smbms_address
    set contact = #{contact,jdbcType=VARCHAR},
      addressDesc = #{addressdesc,jdbcType=VARCHAR},
      postCode = #{postcode,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      createdBy = #{createdby,jdbcType=INTEGER},
      creationDate = #{creationdate,jdbcType=TIMESTAMP},
      modifyBy = #{modifyby,jdbcType=INTEGER},
      modifyDate = #{modifydate,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>